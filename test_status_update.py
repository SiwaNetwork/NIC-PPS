#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ GUI
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '.'))

from core.nic_manager import IntelNICManager, PPSMode

def test_status_update():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤...")
    
    nic_manager = IntelNICManager()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ NIC
    nics = nic_manager.get_all_nics()
    if not nics:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö NIC –∫–∞—Ä—Ç")
        return
    
    test_nic = nics[0]
    print(f"üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º NIC: {test_nic.name}")
    print(f"   –¢–µ–∫—É—â–∏–π PPS —Ä–µ–∂–∏–º: {test_nic.pps_mode.value}")
    print(f"   TCXO: {'–í–∫–ª—é—á–µ–Ω' if test_nic.tcxo_enabled else '–û—Ç–∫–ª—é—á–µ–Ω'}")
    
    # –¢–µ—Å—Ç 1: –ò–∑–º–µ–Ω–µ–Ω–∏–µ PPS —Ä–µ–∂–∏–º–∞
    print("\nüîÑ –¢–µ—Å—Ç 1: –ò–∑–º–µ–Ω–µ–Ω–∏–µ PPS —Ä–µ–∂–∏–º–∞")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ä–µ–∂–∏–º
    original_pps = test_nic.pps_mode
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–µ–∂–∏–º—ã
    test_modes = [PPSMode.OUTPUT, PPSMode.DISABLED, PPSMode.INPUT, original_pps]
    
    for mode in test_modes:
        print(f"   –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PPS —Ä–µ–∂–∏–º: {mode.value}")
        success = nic_manager.set_pps_mode(test_nic.name, mode)
        
        if success:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            updated_nic = nic_manager.get_nic_by_name(test_nic.name)
            if updated_nic:
                print(f"   ‚úÖ PPS —Ä–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_nic.pps_mode.value}")
                if updated_nic.pps_mode == mode:
                    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                else:
                    print(f"   ‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω! –û–∂–∏–¥–∞–ª–æ—Å—å: {mode.value}, –ø–æ–ª—É—á–µ–Ω–æ: {updated_nic.pps_mode.value}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PPS —Ä–µ–∂–∏–º: {mode.value}")
    
    # –¢–µ—Å—Ç 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ TCXO
    print("\nüîÑ –¢–µ—Å—Ç 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ TCXO")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    original_tcxo = test_nic.tcxo_enabled
    
    # –ü—Ä–æ–±—É–µ–º –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å TCXO
    for enabled in [True, False, original_tcxo]:
        print(f"   –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TCXO: {'–í–∫–ª—é—á–µ–Ω' if enabled else '–û—Ç–∫–ª—é—á–µ–Ω'}")
        success = nic_manager.set_tcxo_enabled(test_nic.name, enabled)
        
        if success:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            updated_nic = nic_manager.get_nic_by_name(test_nic.name)
            if updated_nic:
                print(f"   ‚úÖ TCXO –æ–±–Ω–æ–≤–ª–µ–Ω: {'–í–∫–ª—é—á–µ–Ω' if updated_nic.tcxo_enabled else '–û—Ç–∫–ª—é—á–µ–Ω'}")
                if updated_nic.tcxo_enabled == enabled:
                    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                else:
                    print(f"   ‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω! –û–∂–∏–¥–∞–ª–æ—Å—å: {enabled}, –ø–æ–ª—É—á–µ–Ω–æ: {updated_nic.tcxo_enabled}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TCXO: {'–í–∫–ª—é—á–µ–Ω' if enabled else '–û—Ç–∫–ª—é—á–µ–Ω'}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_status_update() 